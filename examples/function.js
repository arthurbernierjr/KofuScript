// Generated by KofuScript 0.1.0-beta4 
var present = console.log; 
// Generated by KofuScript 0.1.0-beta4 
var add, list, map, nullableFunc, partial, ret;
0;
add = function (x, y) {
  return x + y;
};
add(3, 5);
ret = add(3, 5);
0;
partial = function (m) {
  return function (n) {
    return m + n;
  };
};
partial(3)(2);
0;
map = function (list, fn) {
  var i;
  return function (accum$) {
    for (var i$ = 0, length$ = list.length; i$ < length$; ++i$) {
      i = list[i$];
      accum$.push(fn(i));
    }
    return accum$;
  }.call(this, []);
};
list = map([
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10
], function (n) {
  return '';
});
0;
nullableFunc = function (n) {
  if (n > 10) {
    return n;
  } else {
    return null;
  }
  return 3;
};
nullableFunc(5);
function isOwn$(o, p) {
  return {}.hasOwnProperty.call(o, p);
}
function extends$(child, parent) {
  for (var key in parent)
    if (isOwn$(parent, key))
      child[key] = parent[key];
  function ctor() {
    this.constructor = child;
  }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor;
  child.__super__ = parent.prototype;
  return child;
}