// Generated by KofuScript 0.1.0-beta4 
var present = console.log; 
// Generated by KofuScript 0.1.0-beta4 
var code, csAST, final, Fix, fixed, jsAST, KofuScript;
KofuScript = require('../lib/module');
Fix = require('../utils/esm');
code = "\na = require '~/b'\n{b} = require '@/g'\nmodule.exports = a";
csAST = KofuScript.parse(code);
jsAST = KofuScript.compile(csAST, { bare: true });
final = KofuScript.jsEsm(jsAST);
fixed = Fix(final);
present(fixed);
function isOwn$(o, p) {
  return {}.hasOwnProperty.call(o, p);
}
function extends$(child, parent) {
  for (var key in parent)
    if (isOwn$(parent, key))
      child[key] = parent[key];
  function ctor() {
    this.constructor = child;
  }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor;
  child.__super__ = parent.prototype;
  return child;
}