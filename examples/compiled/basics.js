// Generated by KofuScript 0.1.0-beta6 
var present = console.log; 
// Generated by KofuScript 0.1.0-beta6 
var a, all, count, currentNumber, currentUser, newState, popular, state, stringParser, sum, theBait, theBait, theSwitch, theSwitch, total, unwanted, updatedState, user, val, voltron;
import _stringParser from 'arthur-pavlos-string-reversal'; 
 stringParser = _stringParser;
theBait = 1e3;
theSwitch = 0;
cache$ = [
  theSwitch,
  theBait
];
theBait = cache$[0];
theSwitch = cache$[1];
a = 1;
present('undefined' !== typeof b && null != b ? b : a);
popular = [
  'pepperoni',
  'sausage',
  'cheese'
];
unwanted = [
  'anchovies',
  'olives'
];
all = [].slice.call(popular).concat([].slice.call(unwanted), ['mushrooms']);
present(all);
user = {
  name: 'Werner Heisenberg',
  occupation: 'theoretical physicist'
};
currentUser = Object.assign({}, user, { name: 'arthur' });
present(currentUser);
voltron = function () {
  var args;
  args = arguments.length > 0 ? [].slice.call(arguments, 0) : [];
  return Object.assign.apply(Object, [{}].concat([].slice.call(args)));
};
state = {
  height: 72,
  age: 35
};
newState = { age: 36 };
updatedState = voltron(state, newState);
present(updatedState);
total = 0;
count = 1;
while (count <= 10) {
  total += count;
  count += 1;
}
present(total);
sum = 0;
for (var i$ = 1; i$ <= 10; ++i$) {
  currentNumber = i$;
  sum += currentNumber;
}
val = {
  key: 'value',
  mad: true,
  happy: true,
  cool: true
};
present(sum);
present(val);
export default val;