// Generated by KofuScript 0.0.3-alpha.1 
var present = console.log; 
// Generated by KofuScript 0.0.3-alpha.1 
var a, c, Class, name, Person, Point, Region, region;
Person = function () {
  0;
  0;
  0;
  function Person(name, age) {
    this.name = name;
    this.age = age;
  }
  return Person;
}();
a = new Person('mizchi', 26);
name = a.name;
Point = function () {
  function Point() {
  }
  0;
  0;
  return Point;
}();
0;
Region = function (super$) {
  extends$(Region, super$);
  function Region() {
    super$.apply(this, arguments);
  }
  ;
  return Region;
}(Point);
region = new Region;
Class = function () {
  0;
  0;
  function Class(a) {
  }
  return Class;
}();
c = new Class(1);
present(a);
function isOwn$(o, p) {
  return {}.hasOwnProperty.call(o, p);
}
function extends$(child, parent) {
  for (var key in parent)
    if (isOwn$(parent, key))
      child[key] = parent[key];
  function ctor() {
    this.constructor = child;
  }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor;
  child.__super__ = parent.prototype;
  return child;
}